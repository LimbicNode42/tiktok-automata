{
  "metadata": {
    "extraction_timestamp": "2025-06-10T22:31:54.569961",
    "scraper_version": "1.0",
    "extraction_statistics": {
      "total_articles": 12,
      "success_count": 6,
      "partial_count": 1,
      "failed_count": 5,
      "success_rate": 50.0,
      "partial_rate": 8.3,
      "failure_rate": 41.7,
      "failed_articles": [
        {
          "title": "Apple WWDC 2025: the 13 biggest announcements",
          "url": "https://www.theverge.com/news/682769/apple-wwdc-2025-biggest-announcements-ios-26?utm_source=tldrnewsletter",
          "reason": "Content validation failed - content too short, paywall detected, or formatting issues"
        },
        {
          "title": "Doctors Could Hack the Nervous System With Ultrasound",
          "url": "https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes?utm_source=tldrnewsletter",
          "reason": "Content validation failed - content too short, paywall detected, or formatting issues"
        },
        {
          "title": "AI's metrics question",
          "url": "https://www.ben-evans.com/benedictevans/2025/6/9/generative-ais-metrics-question?utm_source=tldrnewsletter",
          "reason": "Content extraction failed - no content found using site-specific, adaptive, or generic strategies"
        },
        {
          "title": "Silicon Valley's quest to remove friction from our lives",
          "url": "https://www.strangeloopcanon.com/p/notes-on-friction?utm_source=tldrnewsletter",
          "reason": "Content validation failed - content too short, paywall detected, or formatting issues"
        },
        {
          "title": "A bit more on Twitter/X's new encrypted messaging",
          "url": "https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/?utm_source=tldrnewsletter",
          "reason": "Content validation failed - content too short, paywall detected, or formatting issues"
        }
      ],
      "partial_articles": [
        {
          "title": "The SignalFire State of Talent Report - 2025",
          "url": "https://www.signalfire.com/blog/signalfire-state-of-talent-report-2025?utm_source=tldrnewsletter",
          "reason": "Partial extraction: got 2308/3400 words (67.9%)",
          "word_count": 2308
        }
      ]
    }
  },
  "articles": [
    {
      "title": "Apple WWDC 2025: the 13 biggest announcements",
      "content": "[CONTENT EXTRACTION FAILED] Unable to extract content from: https://www.theverge.com/news/682769/apple-wwdc-2025-biggest-announcements-ios-26?utm_source=tldrnewsletter",
      "summary": "7-minute read",
      "url": "https://www.theverge.com/news/682769/apple-wwdc-2025-biggest-announcements-ios-26?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "dev",
      "word_count": 0,
      "content_extraction_status": "failed",
      "failure_reason": "Content validation failed - content too short, paywall detected, or formatting issues"
    },
    {
      "title": "OpenAI hits $10 billion in annual recurring revenue fueled by ChatGPT growth",
      "content": "Key Points OpenAI has hit $10 billion in annual recurring revenue, according to a company spokesperson. The milestone comes roughly two and a half years after the company launched its popular ChatGPT chatbot. The figure includes revenue from the company's consumer products, ChatGPT business products and its API, an OpenAI spokesperson says. OpenAI CEO Sam Altman appears on screen during a talk with Microsoft Chair and CEO Satya Nadella at the Microsoft Build 2025 conference in Seattle on May 19, 2025. Jason Redmond | AFP | Getty Images OpenAI has hit $10 billion in annual recurring revenue, or ARR, less than three years after launching its popular ChatGPT chatbot. The figure includes sales from the company's consumer products; ChatGPT business products; and its application programming interface, or API. It excludes licensing revenue from Microsoft and large one-time deals, according to an OpenAI spokesperson. For all of last year, OpenAI had around $5.5 billion in ARR. Reaching its meteoric growth rates requires a substantial amount of cash. The San Francisco-based startup lost about $5 billion last year. OpenAI is also targeting $125 billion in revenue by 2029, according to a person familiar with the matter who asked not to be named because the details are confidential. The Information first reported on OpenAI's revenue ambitions. The new revenue metrics give some context to OpenAI's monster valuation. OpenAI closed a $40 billion funding round in March, marking the largest private tech deal on record. At today's metrics, OpenAI is valued at about 30 times revenue, which highlights the hyper growth expectations by some of its largest investors. OpenAI is backed by Japan's SoftBank , Microsoft , Coatue, Altimeter, Thrive and others. OpenAI burst onto the scene with the release of the consumer version of ChatGPT in late 2022, and began launching business products the following year. As of late March, OpenAI said it supports 500 million weekly active users. The company announced earlier this month that it has three million paying business users, up from the two million it reported in February. WATCH: OpenAI paying business users of ChatGPT hits 3 million, up from 2 million in February watch now VIDEO 1:59 01:59 OpenAI paying business users of ChatGPT hits 3 million, up from 2 million in February The Exchange FBI says Palm Springs bombing suspects used AI chat program to help plan attack Annie Palmer Nvidia CEO Jensen Huang hammers chip controls that 'effectively closed' China market Kif Leswing Telegram CEO announces $300 million partnership with Elon Musk's xAI and Grok Ashley Capoot Read More",
      "summary": "2-minute read",
      "url": "https://www.cnbc.com/2025/06/09/openai-hits-10-billion-in-annualized-revenue-fueled-by-chatgpt-growth.html?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 423,
      "content_extraction_status": "success",
      "failure_reason": null
    },
    {
      "title": "Doctors Could Hack the Nervous System With Ultrasound",
      "content": "[CONTENT EXTRACTION FAILED] Unable to extract content from: https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes?utm_source=tldrnewsletter",
      "summary": "12-minute read",
      "url": "https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 0,
      "content_extraction_status": "failed",
      "failure_reason": "Content validation failed - content too short, paywall detected, or formatting issues"
    },
    {
      "title": "XRobotics' countertop robots are cooking up 25,000 pizzas a month",
      "content": "XRobotics thinks it has cracked the code on getting pizza restaurants to adopt robotics. The San Francisco-based robotics company built a countertop robot called xPizza Cube, which is roughly the size of a stackable washing machine and uses machine learning to apply sauce, cheese, and pepperoni to pizza dough. The machines, which lease for $1,300 a month for three years, can make up to 100 pizzas an hour and be retrofitted to work with pies of different sizes and styles, like Detroit and Chicago deep dish. “This saves like almost 70, sometimes 80% of the time for the staff,” Denis Rodionov, the co-founder and CEO of XRobotics, told TechCrunch. “It is just repeatable work. If you have a pepperoni pizza, you need to place 50 slices of pepperoni one by one.” XRobotics is not the only company that has tried to introduce robotics into the restaurant industry — nor the only one focused on pizza. Zume is the most notable pizza robotics company — if that can be considered its own category. The company raised more than $420 million in venture capital for its robotic pizza trucks, before pivoting to focus on sustainable packaging in 2020 and shuttering entirely in 2023. Rodionov argues that they’ve been successful where other companies haven’t because they aren’t trying to fully transform the pizza-making process, as Zume was, but rather build technology to help existing pizza makers save on time and labor. Because they are building assistive technology, as opposed to replacement tech, Rodionov said they’ve been able to keep their device small enough to fit in existing kitchens and priced at a level that pizzerias — from mom-and-pop shops to large chains, both of which the company counts as customers — could afford. Techcrunch event Save $200+ on your TechCrunch All Stage pass Build smarter. Scale faster. Connect deeper. Join visionaries from Precursor Ventures, NEA, Index Ventures, Underscore VC, and beyond for a day packed with strategies, workshops, and meaningful connections. Save $200+ on your TechCrunch All Stage pass Build smarter. Scale faster. Connect deeper. Join visionaries from Precursor Ventures, NEA, Index Ventures, Underscore VC, and beyond for a day packed with strategies, workshops, and meaningful connections. Boston, MA | July 15 REGISTER NOW The company found this out the hard way. XRobotics launched in 2019 and introduced the first version of the technology in 2021 . Its first robot was significantly larger and could work with more than 20 toppings, and ran into the same problems as their competitors. “We did a real pilot in the restaurant with our huge machine,” Rodionov said. “We learned a lot from that, and we figured out we needed a very small, compact solution. It was a bit scary. All the numbers, all the feelings, all the gut said you need to do this, not this . And we just followed the gut and said, ‘Yeah, we would go and make a smaller version,’ and it was tremendous success.” XRobotics launched their current model in 2023. The company declined to share how many customers it has. It said its robots are producing 25,000 pizzas per month, but how many customers that translates to is hard to calculate. The startup also recently raised a $2.5 million seed round led by FinSight Ventures with participation from SOSV, MANA Ventures, and Republic Capital. Rodionov said the company will use the capital to produce more units and install more robots for customers. XRobotics is committed to the pizza industry, at least for now, Rodionov said, considering the sheer size of the market — there are more than 73,000 pizza chains in the U.S. alone . The company plans to expand to Mexico and Canada next. “I love pizza, my co-founder too,” Rodionov said. “We have tested probably any pizza in San Francisco. Also, we test pizza in New York and Chicago.” Rodionov added that Detroit-style pizza, known for its square shape and crispy cheese crust, is his favorite.",
      "summary": "4-minute read",
      "url": "https://techcrunch.com/2025/06/09/xrobotics-countertop-robots-are-cooking-up-25000-pizzas-a-month/?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 658,
      "content_extraction_status": "success",
      "failure_reason": null
    },
    {
      "title": "Apple Announces Foundation Models Framework for Developers to Leverage AI",
      "content": "Apple Announces Foundation Models Framework for Developers to Leverage AI Monday June 9, 2025 10:10 am PDT by Tim Hardwick Apple at WWDC today announced Foundation Models Framework, a new API allowing third-party developers to leverage the large language models at the heart of Apple Intelligence and build it into their apps. With the Foundation Models Framework, developers can integrate Apple's on-device models directly into apps, allowing them to build on Apple Intelligence. \"Last year, we took the first steps on a journey to bring users intelligence that's helpful, relevant, easy to use, and right where users need it, all while protecting their privacy. Now, the models that power Apple Intelligence are becoming more capable and efficient, and we're integrating features in even more places across each of our operating systems,\" said Craig Federighi, Apple's senior vice president of Software Engineering. \"We're also taking the huge step of giving developers direct access to the on-device foundation model powering Apple Intelligence, allowing them to tap into intelligence that is powerful, fast, built with privacy, and available even when users are offline. We think this will ignite a whole new wave of intelligent experiences in the apps users rely on every day. We can't wait to see what developers create.\" The Foundation Models framework lets developers build AI-powered features that work offline, protect privacy, and incur no inference costs. For example, an education app can generate quizzes from user notes on-device, and an outdoors app can offer offline natural language search. Apple says the framework is available for testing starting today through the Apple Developer Program at developer.apple.com, and a public beta will be available through the Apple Beta Software Program next month at beta.apple.com. It includes built-in features like guided generation and tool calling for easy integration of generative capabilities into existing apps. Tag: WWDC 2025 [ 6 comments ] Get weekly top MacRumors stories in your inbox. Popular Stories Monday June 9, 2025 9:00 am PDT by Jordan Golson Apple's Worldwide Developers Conference (WWDC) starts today with the traditional keynote kicking things off at 10:00 a.m. Pacific Time. MacRumors is on hand for the event and we'll be sharing details and our thoughts throughout the day. We're expecting to see a number of software-related announcements led by a design revamp across Apple's platforms that will also see the numbering of all of... • 1211 comments Friday June 6, 2025 7:27 am PDT by Joe Rossignol Apple is planning to announce several new features for the Messages and Phone apps on iOS 26, according to Bloomberg's Mark Gurman. In a lengthy report outlining his WWDC 2025 expectations today, Gurman said that the two main changes in the Messages app will be the ability to create polls, as well as the option to set a background image within a conversation. 9to5Mac was first to report... • 50 comments Monday June 9, 2025 10:13 am PDT by Hartley Charlton Apple today announced a complete redesign of all of its major software platforms called \"Liquid Glass.\" Announced simultaneously for iOS, iPadOS, macOS, watchOS, tvOS, visionOS, and CarPlay, Liquid Glass forms a new universal design language for the first time. At its WWDC 2025 keynote address, Apple's software chief Craig Federighi said \"Apple Silicon has become dramatically more powerful... • 229 comments Friday June 6, 2025 6:17 am PDT by Joe Rossignol While the so-called \"iPhone 17 Air\" is not expected to launch until September, there are already plenty of rumors about the ultra-thin device. Overall, the iPhone 17 Air sounds like a mixed bag. While the device is expected to have an impressively thin and light design, rumors indicate it will have some compromises compared to iPhone 17 Pro models, including worse battery life, only a single ... • 77 comments Monday June 9, 2025 11:22 am PDT by Joe Rossignol Apple today announced that iPadOS 26 will be compatible with the iPad models listed below. iPadOS 26 features a new Liquid Glass design, a menu bar, improved app windowing, and more. iPadOS 26 supports the following iPad models:iPad Pro (M4) iPad Pro 12.9-inch (3rd generation and later) iPad Pro 11-inch (1st generation and later) iPad Air (M2 and later) iPad Air (3rd generation and... • 97 comments Sunday June 8, 2025 11:44 am PDT by Joe Rossignol Apple's long-rumored AirTag 2 might be coming soon. In his Power On",
      "summary": "2-minute read",
      "url": "https://www.macrumors.com/2025/06/09/foundation-models-framework/?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 726,
      "content_extraction_status": "success",
      "failure_reason": null
    },
    {
      "title": "LLMs are cheap",
      "content": "LLMs are cheap Posted on 2025-06-02 in General This post is making a point - generative AI is relatively cheap - that might seem so obvious it doesn't need making. I'm mostly writing it because I've repeatedly had the same discussion in the past six months where people claim the opposite. Not only is the misconception still around, but it's not even getting less frequent. This is mainly written to have a document I can point people at, the next time it repeats. It seems to be a common, if not a majority, belief that Large Language Models (in the colloquial sense of \"things that are like ChatGPT\") are very expensive to operate. This then leads to a ton of innumerate analyses about how AI companies must be obviously doomed, as well as a myopic view on how consumer AI businesses can/will be monetized. It's an understandable mistake, since inference was indeed very expensive at the start of the AI boom, and those costs were talked about a lot. But inference has gotten cheaper even faster than models have gotten better, and nobody has an intuition for something becoming 1000x cheaper in two years. It just doesn't happen. It doesn't help that the common pricing model (\"$ per million tokens\") is very hard to visualize. So let's compare LLMs to web search. I'm choosing search as the comparison since it's in the same vicinity and since it's something everyone uses and nobody pays for, not because I'm suggesting that ungrounded generative AI is a good substitute for search. (It should also go without saying that these are just my personal opinions.) What is the price of a web search? Here's the public API pricing for some companies operating their own web search infrastructure, retrieved on 2025-05-02: The Gemini API pricing lists a \"Grounding with Google Search\" feature at $35/1k queries. I believe that's the best number we can get for Google, they don't publish prices for a \"raw\" search result API. The Bing Search API is priced at $15/1k queries at the cheapest tier. Brave has a price of $5/1k searches at the cheapest tier. Though there's something very strange about their pricing structure, with the unit pricing increasing as the quota increases, which is the opposite of what you'd expect. The tier with real quota is priced at $9/1k searches. So there's a range of prices, but not a horribly wide one, and with the engines you'd expect to be of higher quality also having higher prices. What is the price of LLMs in a similar domain? To make a reasonable comparison between those search prices and LLM prices, we need two numbers: How many tokens are output per query? What's the price per token? I picked a few arbitrary queries from my search history, and phrased them as questions, and ran them on Gemini 2.5 Flash (thinking mode off) in AI Studio: [When was the term LLM first used?] -> 361 tokens, 2.5 seconds [What are the top javascript game engines?] -> 1145 tokens, 7.6 seconds [What are the typical carry-on bag size limits in europe?] -> 506 tokens, 3.4 seconds [List the 10 largest power outages in history] -> 583 tokens, 3.7 seconds Note that I'm not judging the quality of the answers here. The purpose is just to get rough numbers for how large typical responses are. A 500-1000 token range seems like a reasonable estimate. What's the price of a token? The pricing is sometimes different for input and output tokens. Input tokens tend to be cheaper, and our inputs are very short compared to the outputs, so for simplicity let's consider all the tokens to be outputs. Here's the pricing of some relevant models, retrieved on 2025-05-02: Model Price / 1M tokens Gemma 3 27B $0.20 ( source ) Qwen3 30B A3B $0.30 ( source ) Gemini 2.0 Flash $0.40 ( source ) GPT-4.1 nano $0.40 ( source ) Gemini 2.5 Flash Preview $0.60 ( source ) Deepseek V3 $1.10 ( source ) GPT-4.1 mini $1.60 ( source ) Deepseek R1 $2.19 ( source ) Claude 3.5 Haiku $4.00 ( source ) GPT-4.1 $8.00 ( source ) Gemini 2.5 Pro Preview $10.00 ( source ) Claude 3.7 Sonnet $15.00 ( source ) o3 $40.00 ( source ) If we assume the average query uses 1k tokens, these prices would be directly comparable to the prices per 1k search queries. That's convenient. The low end of that spectrum is at least an order of magnitude cheaper than even the cheapest search API, and even the models at the low end are pretty capable. The high end is about on par with the highest end of search pricing. To compare a midrange pair on quality, the Bing Search vs. a Gemini 2.5 Flash comparison shows the LLM being 1/25th the price. Note that many of the above models have cheaper pricing in exchange for more flexible scheduling (Anthropic, Google and OpenAI give a 50% discount for batch requests, Deepseek is 50%-75% cheaper during off-peak hours). I've not included those cheaper options in the table to keep things comparable, but the presence of those cheaper tiers is worth keeping in mind when thinking about the next section... Objection! I know some people are going to have objections to this back-of-the-envelope calculation, and a lot of them will be totally legit concerns. I'll try to address some of them preemptively. Slightly different assumptions can easily lead to clawing back 10% here and 50% there. But I don't see how to bridge a 25x gap just for breaking even, let alone making the AI significantly more expensive. If you want to play around with different assumptions, there's a little calculator widget below. Surely the typical LLM response is longer than that - I already picked the upper end of what the (very light) testing suggested as a reasonable range for the type of question that I'd use web search for. There's a lot of use cases where the inputs and outputs are going to be much longer (e.g. coding), but then you'd need to also switch the comparison to something in that same domain as well. The LLM API prices must be subsidized to grab market share -- i.e. the prices might be low, but the costs are high - I don't think they are, for a few reasons. I'd instead assume APIs are typically profitable on a unit basis. I have not found any credible analysis suggesting otherwise. First, there's not that much motive to gain API market share with unsustainably cheap prices. Any gains would be temporary, since there's no long-term lock-in, and better models are released weekly. Data from paid API queries will also typically not be used for training or tuning the models, so getting access to more data wouldn't explain it. Note that it's not just that you'd be losing money on each of these queries for no benefit, you're losing the compute that could be spent on training, research, or more useful types of inference. Second, some of those models have been released with open weights and API access is also available from third-party providers who would have no motive to subsidize inference. (Or the number in the table isn't even first party hosting -- I sure can't figure out what the Vertex AI pricing for Gemma 3 is). The pricing of those third-party hosted APIs appears competitive with first-party hosted APIs. For example, the Artificial Analysis summary on Deepseek R1 hosting . Third, Deepseek released actual numbers on their inference efficiency in February. Those numbers suggest that their normal R1 API pricing has about 80% margins when considering the GPU costs, though not any other serving costs. Fourth, there are a bunch of first-principles analyses on the cost structure of models with various architectures should be. Those are of course mathematical models, but those costs line up pretty well with the observed end-user pricing of models whose architecture is known. See the references section for links. The search API prices amortize building and updating the search index, LLM inference is based on just the cost of inference - This seems pretty likely to be true, actually? But the effect can't really be that large for a popular model: e.g. the allegedly leaked OpenAI financials claimed $4B/year spent on inference vs. $3B/year on training. Given the crazy growth of inference volumes (e.g. Google recently claimed a 50x increase in token volumes in the last year ) the training costs are getting amortized much more effectively. The search API prices must have higher margins than LLM inference - It's possible. I certainly don't know what the margins of any Search API providers are, though it seems fair to assume they're pretty robust. But, well, see the point above about Deepseek's releasd numbers on the R1 profit margins. Also, it seems quite plausible that some Search providers would accept lower margins, since at least Microsoft execs have testified under oath that they'd be willing to pay more for the iOS query stream than their revenue, just to get more usage data. Web search returns results 20x-100x faster than an LLM finishes the query, how could it be more expensive? - Search latency can be improved by parallelizing the problem, while LLM inference is (for now) serial in nature. The task of predicting a single token can be parallelized, but the you can't predict all the output tokens at once. But OpenAI made a loss, and they don't expect to make profit for years! - That's because a huge proportion of their usage is not monetized at all, despite the usage pattern being ideal for it. OpenAI reportedly made a loss of $5B in 2024. They also reportedly have 500M MAUs. To reach break-even, they'd just need to monetize (e.g. with ads) those free users for an average of $10/year, or $1/month. A $1 ARPU for a service like this would be pitifully low. If the reported numbers are true, OpenAI doesn't actually have high costs for a consumer service that popular, which is what you'd expect to see if the high cost of inference was the problem. They just have a very low per-user revenue, by choice. Sensitivity analysis If you want to play around with different assumptions, here's a calculator: Open in new tab Why does this matter? I mean, you're right to ask that. Nothing really matters and eventually we'll all be dead. But it is interesting how many people have built their mental model for the near future on a premise that was true for only a brief moment. Some things that will come as a surprise to them even assuming all progress stops right now: There's an argument advanced by some people about how low prices mean it'll be impossible for AI companies to ever recoup model training costs. The thinking seems to be that it's just the prices that have been going down, but not the costs, and the low prices must be an unprofitable race to the bottom for what little demand there is. What's happening and will continue to happen instead is that as costs go down, the prices go down too, and demand increases as new uses become viable. For an example, look at the OpenRouter API traffic volumes , both in aggregate and in the relative share of cheaper models. This post was mainly about APIs, but consumer usage will have exactly the same cost structure, just a different monetization structure. And given how low the unit costs must be, advertising isn't merely viable but lucrative. From this it follows that the financials of frontier AI labs are a lot better than some innumerate pundits would have you believe. They're making a loss because they're not under pressure to be profitable, and aren't actively trying to monetize consumer traffic yet. This could well be a land grab unlike APIs, since unpaid consumer queries may be used for training while paid API queries typically are not. Even the subscription pricing might be there mainly for demand management rather than trying to run a profit. The real cost problem isn't going to be with the LLMs themselves, it's with all the backend services that AI agents will want to access if even a rudimentary form of the agentic vision actually materializes. Running the AI is already cheap, will keep getting cheaper, and will always have a monetization model of some sort since it's what the end user is interacting with. Neither of those is true for the end-user services that have been turned into AI backends without their consent. An AI trying to, I don't know, book concert tickets whenever a band I like plays in my town will probably be phenomenally expensive to its third-party backends (e.g. scraping ticket sites). Those sites will be uncompensated for the expense while also removing their actual revenue streams. I don't really know how that plays out. Obviously many service owners will try to make unauthorized scraping harder, but that's a very hard problem to solve on the web. Maybe some of them give up on the web entirely, and move to mobile where they can at least get device attestations. Some might just give up on the open web, and require all usage to be signed in, with account creation being gated on something scarce. Some might become unviable and close up shop entirely. If/when that happens, what's the play on the AI agent side? Will they choose an escalating adversarial arms race with increasingly dodgy tactics, or will they eventually decide that it's better to pay for the services they use? The former seems unsustainable. If the latter, then it feels like the core engineering challenge becomes one of building data provider backends optimized specifically for AI use, with the goal of scaling to massive volumes and cheaper unit prices, with the trade-off being higher latency, lower reliability and lower quality. That could be quite interesting from a systems perspective. (Yes, I'm aware of MCP , but it's a solution to an orthogonal issue.) But one thing I'm confident won't be happening is that it's the AIs that turn out to be too expensive to run. Additional reading Below are some additional references that were not worked into the main narrative (this article was long-winded enough already). Inference economics of language models (2025) - A mathematical model for estimating the cost structure, latency/cost tradeoffs, optimal cluster size, and optimal batching based on the LLM architecture. LLM Inference Economics from First Principles - (2025) A very detailed cost-per-token computation on the cost structure of one specific model, LLama 3.3 70B. Observations About LLM Inference Pricing - (2025) Analysis of the economics driven by pricing data rather than first-principles cost structure; concludes that proprietary models have very significant markups. Large Language Models Search Architecture And Cost - (2023) Analysis on the cost of integrating LLMs into search; the LLM cost data is no longer very relevant due to the age of the article (GPT-3.5) but it uses a different way of estimating the search cost structure. If you liked this and want to be notified of new posts, follow me on",
      "summary": "16-minute read",
      "url": "https://www.snellman.net/blog/archive/2025-06-02-llms-are-cheap/?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 2530,
      "content_extraction_status": "success",
      "failure_reason": null
    },
    {
      "title": "One Man Armies",
      "content": "One Man Armies In an overdecorated office somewhere in California, there is someone being paid so much money they could take six months of their salary, move to Brazil, and never work another day in their life — and yet this person is getting a remarkably little amount of work done every day. Just down the street, in a similar-looking office, there is a similar-looking person who is producing astonishing work at a breakneck pace. The variation in human output is kind of insane. What some may consider impossible without a team and $5M can sometimes be built by a single person who cares a lot and works hard. It’s easy to understimate just how much a one person army can achieve. So here are some of our favorite one-person (or mostly one-person) projects. We’re not including things that you wouldn't be surprised one person made, like a music album or a novel, though those are also very impressive. Stardew Valley was made by Eric Barone , who put in 70 hours a week for 4.5 years before releasing the game for the first time. He still updates the game with loads of new content. Linux was created by Linus Torvalds . He is not responsible for all of Linux and did not do everything single handedly, but he was its origin (which was a lot of work). Minecraft, before it sold to Microsoft, was developed by Markus Persson . It took him 2 years! The Art of Computer Programming is a massive tome of a lot of knowledge about computer programming and algorithms and math. It’s used by all sorts of people (from scientists to mathematicians to linguists) and it is not yet done. The one person behind this book is Donald Knuth . The Sagrada Familia was designed by Antonio Gaudí , who spent more than 40 years of his life on it. The first scientific map of the Atlantic Ocean floor, which discovered the rift valley in the Mid-Atlantic ridge and was foundational evidence for the plate tectonics theory, was created solo by Marie Tharp. Bruce Heezen, a colleague, collected the raw data as women were not allowed to work on ships at the time. The Coral Castle, a kind of weird-but-cool garden of structures in Florida, was built singlehandedly by a Latvian immigrant named Edward Leedskalnin . When asked how he moved such heavy rocks on his own for his structures, he said he knew the secrets of those who built the Pyramids. The first version of a computer program was written in the 1800s by Ada Lovelace . The Cathedral of Justo in Spain was designed and built almost exclusively by Justo Gallego Martinez . He worked on it for the better part of his life, all the way up until he died. Rollercoaster Tycoon, a game you should definitely play, was made by Chris Sawyer . Kenshi, a complex RPG game, was made in 12 years by Chris Hunt . The Theory of General Relativity, as you probably know, was created by this guy . jQuery was made by one person: John Resig . Fun fact, he works at Khan Academy as of this writing. Christianity, though it later spread in many other ways, was pioneered by Jesus of Nazareth . Islam, though it also later spread in many ways, was pioneered by Muhammad ibn Abdullah . Light is a series of seven operas, one for each day of the week. It takes nearly 30 hours to perform. It was composed over decades by Karlheinz Stockhausen . 24 Preludes, Op. 28 by Frédéric Chopin is a project that includes one prelude for each key. He wrote it entirely on his own. Many of these pieces were masterpieces and pushed the boundaries of piano at the time. Beethoven, Liszt, Rachmaninov, Mozart, Bartók, Bach, Scriabin, Debussy, and the list goes on — many of the most influential composers also put together most of their ambitious projects solo. You can take away whatever you want from this list. One takeaway is that it is extremely impressive. If the Theory of General Relativity, entire cathedrals, 29-hour operas, and billion-dollar video games can be made by a single person, your own grand and seemingly unrealistic ideas may not be too ambtious, either. And, if you care enough about them, they might be worth trying. It sounds a bit like a feel-good platitude—but it may also be true. If you are looking for a list of ideas to try, you could read this. * * * Enjoy these essays? Enter your email and we'll let you know when we post a new one. No spam, just essays. Or, if you have any feedback,",
      "summary": "4-minute read",
      "url": "https://quarter--mile.com/One-Man-Armies?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 783,
      "content_extraction_status": "success",
      "failure_reason": null
    },
    {
      "title": "The SignalFire State of Talent Report - 2025",
      "content": "’s talent gap widens: new grad hiring plummets, Texas loses startup talent, and Anthropic's 80% retention dominance. Over the last couple of years, we’ve seen companies rewrite the playbook for hiring AI and tech talent. In a landscape defined by fierce competition and rapid change, our latest tech talent report zeroes in on the bold moves, early trends, and strategic pivots reshaping how companies attract and retain top-tier talent in 2025 and beyond. At SignalFire, our Beacon AI platform tracks over 650 million professionals and 80 million organizations to give us a front-row seat to the talent transformations reshaping the industry. Our latest report reveals some sharp shifts: - Entry-level hiring is collapsing - A generational hiring shift is leaving new graduates behind - Elite AI labs are locking in top talent, and retaining them - Geographic power centers are evolving fast While headlines continue to highlight labor market shifts amidst political change and intense AI rivalry among tech giants, our data reveals a more nuanced story. This isn’t just about layoffs or remote work. It’s about a fundamental reset in how, where, and who companies are hiring to build the next generation of technology. #1 Tech's lost generation? New grad hiring drops 50% compared to pre-pandemic levels The tech world has long been synonymous with innovation, breakneck growth, and boundless opportunities. The door to tech once swung wide open for new grads. Today, it’s barely cracked. The industry's obsession with hiring bright-eyed grads right out of college is colliding with new realities: smaller funding rounds, shrinking teams, fewer new grad programs, and the rise of AI. Everyone took a hit in 2023, but while hiring bounced back in 2024 for mid- and senior-level roles, the cut keeps getting deeper for new grads: Big Tech: New grads now account for just 7% of hires, with new hires down 25% from 2023 and over 50% from pre-pandemic levels in 2019. Startups: New grads make up under 6% of hires, with new hires down 11% from 2023 and over 30% from pre-pandemic levels in 2019. ‎As budgets tighten and AI capabilities increase, companies are reducing their investment in new grad opportunities. The latest data from the Federal Reserve Bank of New York shows that the unemployment rate for new college grads has risen 30% since bottoming out in September 2022, versus about 18% for all workers. The perception gap isn’t helping— 55% of employers say Gen Z struggles with teamwork, and 37% of managers said they’d rather use AI than hire a Gen Z employee. Even top computer science grads aren’t spared. As demand for junior roles declines, even highly credentialed engineering grads are struggling to break into tech, especially at the Big Tech companies. The share of new graduates landing roles at the Magnificent Seven (Alphabet, Amazon, Apple, Meta, Microsoft, NVIDIA and Tesla) has dropped by more than half since 2022. ‎The experience paradox It’s not just a hiring slowdown, it’s a shift in expectations. Today’s tech employers aren’t looking for potential, they’re looking for proof. That’s left new grads stuck in a Catch-22: you need experience to get the job, but you need the job to get experience. In a world of leaner teams and tighter budgets, there’s little room for investment in training. As the pipeline for new talent shrinks at breakneck speed, it’s creating fierce competition for the few entry-level roles that remain. The cruel irony? Companies are posting junior roles but filling them with senior individual contributors (ICs)—a phenomenon known as the experience paradox . Series A squeeze or AI hype: What’s really stalling Gen Z hiring? AI gets a lot of blame for wiping out junior roles post-2022, but the real story is more nuanced, as you can see from the 200+ comments on this Hacker News post and this recent article from The Atlantic . Yes, automation is already replacing some routine tasks , but the bigger driver may be the end of the “free money madness” driven by low interest rates that we saw in 2020-2022, along with the overhiring and inflation it led to. Now, with tighter budgets and shorter runways, companies are hiring leaner and later. Carta data shows that Series A tech startups are 20% smaller than they were in 2020. This shift isn’t just about hiring less—it’s a hiring reset. As AI tools take over more routine, entry-level tasks, companies are prioritizing roles that deliver high-leverage technical output. Big Tech is doubling down on machine learning and data engineering, while non-technical functions like recruiting, product, and sales keep shrinking, making it especially tough for Gen Z and early-career talent to break in. But despite the hype, AI hasn’t wiped out entire job categories—yet. So far, the fallout has hit new grads hardest, while demand for experienced engineers is still rising. As AI capabilities continue to grow, the real differentiator will be talent, and no one’s playing the game harder than the top AI labs . #2 AI Labs: Anthropic sets the pace in the talent race November 2022 didn’t just mark the launch of ChatGPT—it kicked off the AI talent race. We analyzed retention across top AI labs, and one clear leader emerged: Anthropic. An impressive 80% of employees hired at least 2 years ago at Anthropic were still at the company at the end of their second year—a figure that stands out in an industry known for high turnover. DeepMind follows closely at 78%, while OpenAI’s retention trails at 67% but remains on par with large FAANG companies like Meta (64%). With outsized salary packages at DeepMind and even Senate scrutiny over Big Tech talent poaching, the AI talent war is real, and the spoils go to those who can attract and keep the best minds. Anthropic’s winning formula and where they’re hiring from: Anthropic’s 80% retention isn’t just impressive—it’s a strategic advantage. In a field where turnover means lost time and money, keeping top talent consistently is a game-changer. And it’s not just about keeping talent, it’s about winning it. Talent poaching with precision: Anthropic is siphoning top talent from two of its biggest rivals: OpenAI and DeepMind. Engineers are 8 times more likely to leave OpenAI for Anthropic than the reverse. From DeepMind, the ratio is nearly 11:1 in Anthropic’s favor. Some of that’s expected—Anthropic is the hot new startup, while DeepMind’s larger, tenured team is ripe for movement. But the scale of the shift is striking. Beyond the salary: While Big Tech leans on big paychecks and brand cachet, Anthropic’s edge is its unique culture that embraces unconventional thinkers and gives employees true autonomy to drive impact. Flexible work options, no title politics or forced management tracks—just clear paths for career growth. Employees say Anthropic embraces intellectual discourse and researcher autonomy, making it a magnet for AI talent stifled by bureaucracy elsewhere. Claude is quickly emerging as a favorite among developers by several informal measures , and that kind of affinity can influence career decisions. Engineers often gravitate toward companies whose products they admire and use, and that perceived product resonance may be giving Anthropic an edge in recruiting. It’s not just rival AI labs feeling the pull— Big Tech has become a prime hunting ground, too . Google, Meta, Microsoft, Amazon, and Stripe serve as primary talent pools for AI labs, and Anthropic has been particularly successful at poaching senior researchers and engineers from these companies.‎ #3 Hot spots, cooling zones, and America’s new tech hubs The tech talent map continues to shift. While San Francisco and New York remain dominant, rising hubs like Toronto, Miami, and San Diego are gaining ground. Meanwhile, Texas cities like Austin are losing momentum, prompting founders to rethink hiring and compensation strategies. More companies are embracing hub-and-spoke models and tailoring compensation philosophies to ensure they secure the right talent mix across diverse locations. Key trends shaping the new geographic playbook Hiring is slowing in most metros, but we’re seeing a reconsolidation of tech jobs around major tech hubs like the Bay Area, Seattle, and NYC. Here are the key geographic trends we saw in 2024: 1. Silicon Valley and New York City hold strong: - High talent, high cost: SF and NYC still anchor the AI ecosystem, with over 65% of AI engineers based in these two metros. Despite rising housing costs, shrinking salary advantages, and remote work flexibility, SF and NY continue to attract more tech talent. 2. The sunshine surge - Miami and San Diego are rising fast: These two cities are attracting tech talent not with massive budgets, but with sun, lifestyle, and lower living costs. - Miami’s mix of tax perks and quality of life has fueled a 12% jump in AI roles, according to recent hiring data. - San Diego saw a 7% rise in Big Tech roles, even as startups in the region lost 3.5% of their workforce in 2024, suggesting talent is being poached upward. In 2024, San Diego County startups raised $5.7 billion in venture capital, marking one of the region's best-performing years on record. 3. Texas cools off: Are Austin and Houston losing their luster? Once the darlings of tech growth, Austin and Houston have been losing startup talent. Lagging infrastructure, a cultural mismatch, fluctuating housing costs, and a renewed emphasis on hybrid RTO policies are motivating startup employees to live closer to traditional hubs. Last year, Austin, which was a post-pandemic growth leader, saw a 6% drop in headcount at VC-backed startups. Houston's drop is even steeper at 10.9%. This isn’t just a story about regional reshuffling—it’s a signal of something bigger. The media’s return-to-office narrative is overstated, and companies are rethinking what really matters. The new model? Proximity over presence. For many tech companies, it’s not about clocking in five days a week—it’s about being close enough for hybrid schedules and anchor days. The result: a surge in in-state hiring as employers strike a new balance between flexibility and face time. #4 Hits and misses from 2024 and predictions for 2025 Some of our predictions from last year’s report held strong while others veered off course. Here’s what we got right—and what we predict is next. 2024: What we saw coming: Fractional work stuck around: Fractional roles are thriving—even at the top. CMOs, CFOs, and CTOs are increasingly working as consultants. Whether this trend holds in a stronger market remains to be seen, but for now, this model seems to be working for companies and execs alike. Cybersecurity kept growing: AI-powered threats are on the rise , and the demand for cybersecurity talent has continued to grow as predicted. Compensation is up, roles are harder to fill, and hiring urgency is higher than ever. Remote work didn’t die—it evolved: The RTO debate rages on, but the reality is more nuanced. Companies are increasingly adopting hybrid models while talent continues to demand flexibility. We won’t know the long-term balance until the next economic cycle resets the supply-demand equation. Our predictions for 2025: The rise of the generalist engineer: Specialists won the last decade. Generalists may win the next. With tools like Copilot, Replit, and Cursor maturing, engineers don’t need deep ML expertise to build with AI. Companies will prioritize flexible, collaborative, generalist engineers who can move fast and collaborate effectively with powerful tools—no PhD required. The year of the equity advisor: With lean startups hesitant to hire for both junior and C-suite roles, founders will tap seasoned experts as equity advisors. Carta data shows these roles are more affordable than before, offering startups a low-cost way to gain experience and mentorship without inflating their burn rate. New jobs—not just disappearing ones: While headlines warn of jobs lost to AI, we see another shift: new roles emerging. Expect to see titles like AI governance lead, AI ethics and privacy specialists, agentic AI engineers, and non-human security ops specialists become commonplace. It’ll take time to scale, but these are some of the roles new grads should be paying attention to. People, not just technology, will shape 2025 and beyond The past year made one thing clear: technology alone doesn’t build the future, people do. Anthropic’s retention edge and the reshaping of talent hubs prove that the real advantage lies in how you hire, grow, and keep great talent. What it means for the road ahead: - For new grads: The training wheels are gone. With fewer entry-level roles, the path forward will rely on bootcamps, open-source, freelancing, and creative projects. It’s not enough to just master the latest AI tools; learn to fix their flaws—debugging messy, machine-generated code may be your superpower. - For employers: AI might reduce the short-term need for junior hires, but skipping them entirely risks breaking the long-term talent pipeline. The industry’s future depends on equipping the next generation with skills that grow alongside the evolving technology landscape. ( Read our article on how to build a multi-generational company here .) ________________________ Methodology Note: This report uses data from our proprietary Beacon AI platform, an intelligence engine that tracks 650+ million individuals and 80+ million organizations. We analyze millions of data points on hiring trends, geographic movements, and more to spot emerging talent and help our portfolio companies build teams and products faster. Here's the approach we used to analyze the data for this report: - “Big tech” represents the top 15 technology companies by market cap. - “Startups” represents companies funded by the Top 100 VC firms that closed a Seed through Series C round in the previous 4 years. - “Top computer science graduates” represents graduates from the top 20 engineering programs in the U.S. according to the U.S. News’ Best Undergraduate Engineering Programs Rankings. - For the AI Labs retention analysis, we excluded some newer AI labs (like DeepSeek and xAI/Grok) because they had not been operating over the whole time period we looked at (2023-2024). We focused on entities with distinct",
      "summary": "17-minute read",
      "url": "https://www.signalfire.com/blog/signalfire-state-of-talent-report-2025?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 2308,
      "content_extraction_status": "partial",
      "failure_reason": "Partial extraction: got 2308/3400 words (67.9%)"
    },
    {
      "title": "AI's metrics question",
      "content": "[CONTENT EXTRACTION FAILED] Unable to extract content from: https://www.ben-evans.com/benedictevans/2025/6/9/generative-ais-metrics-question?utm_source=tldrnewsletter",
      "summary": "5-minute read",
      "url": "https://www.ben-evans.com/benedictevans/2025/6/9/generative-ais-metrics-question?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 0,
      "content_extraction_status": "failed",
      "failure_reason": "Content extraction failed - no content found using site-specific, adaptive, or generic strategies"
    },
    {
      "title": "The Code Review Frustration",
      "content": "Vibe code isn't meant to be reviewed: how to stay in control of codebase and not lose vibe code productivity boost 76 views > Disclaimer: The views and opinions expressed in this post are those of the author and do not necessarily reflect the official position of Monadical. Any content provided is for informational purposes only. ## The Code Review Frustration Another day, another slop. Chasing 10x productivity, you run several Claude code agents simultaneously and push code with blazing fast ferocity. No juniors left on the team — they just couldn't catch up. This morning, walking in the park with his dog, your team lead wrote and deployed a 100-story-point system just by casually talking on his phone to a remote agent. Meanwhile, you're stuck with a code review: ![](https://docs.monadical.com/uploads/042fee53-f1f2-40ba-9e3a-0e65fed1ee4a.png) \"It's fucking vibe code, I don't care!\" — this sentiment is just the tip of the iceberg of a current industry problem: <center><big>Treating all code the same when it fundamentally isn't</big></center> ## The Ownership Trap Here's the brutal reality: **the moment you start treating AI-generated code as \"precious,\" you lose AI's biggest superpower.** Once you've spent time reviewing, fixing, and improving that generated code, you become invested. You're going to be extra careful about AI \"breaking\" it. And it's ok, some code should be like this! But many times you just want to vibe and have your 10x productivity dream come true. Treating vibe code as precious is the productivity killer nobody talks about. You get the initial speed boost, then gradually slide back to normal development velocity as your codebase fills up with \"improved vibe code\" that you're reluctant to throw away. And you aren't ready to regenerate it from scratch anymore — an LLM skill that it excels at sometimes when it's stuck with a loop of never ending edits. Meanwhile, every code review becomes a battle between two conflicting mental models: - Reviewer: \"This could be cleaner\" (treating it like human code) - Author: \"It works, who cares\" (treating it like disposable vibe code) **The industry needs a way to keep these two types of code separate.** ## The Modular Solution: Giving Form to Chaos The solution is neither to abandon AI coding nor to accept messy codebases. It's to **architect the separation explicitly.** Think of it like this: Human code provides the \"form\" or \"mold\" that vibe code must fill. Just like the inpainting/outpainting feature in image generation. The human code contains your domain knowledge, business logic, and architectural decisions. The vibe code is just the implementation details that make it work. When AI code is clearly separated and constrained by interfaces, tests, and clear boundaries, you can also regenerate it fearlessly while keeping your valuable insights intact. ### The Overseer Package Approach #### The High-Level View Before scaring managers and leads with implementation details, here's the conceptual framework: 1. **Interface packages** - Define contracts, data shapes, and the most important tests (human-written) 2. **Implementation packages** - Fulfill those constraints (Vibe-generated, marked as @vibe-coded in README or in files) 3. **Clear dependency direction** - Implementation depends on interfaces, never the reverse 4. **Regeneration freedom** - Any @vibe-coded package can be deleted and rewritten without fear This creates a \"constraint sandwich\" - your domain knowledge stays protected while AI handles the tedious implementation work. > Technical implementation example awaits you in one of the last paragraphs. ## Two Flavors of Review: Classic vs YOLO With the modular approach and vibe code as \"second class citizen,\" we can now reframe code review practices: ### **Classic review: High standards, educational, expertise-building** Continue your nitpicky craftsmanship, talk about loops vs. combinators, and document your findings into project code style for LLMs to conform to. Share knowledge, discover new details about the system. ### **YOLO review**: \"Does it work? Does it pass tests? **Doesn't it sneak around the overseer package requirements**? Does it look safe enough? Ship it.\" <center><big>Clear separation of code \"types\" eliminates misunderstanding and friction</big></center> ## The Control Paradox Solved There are deeper psychological and sociological nth-order benefits to this approach. ### Professional Confidence When someone asks about a feature, you want to give an answer. \"I don't know, I vibed it\" destroys professional credibility. \"Cursor can't find the answer today, try again tomorrow\" makes you incompetent. With explicit separation, you can confidently say: \"The business logic is in the interface packages - here's exactly how it works. The implementation details are auto-generated, but the core logic is solid.\" ### Competitive Advantage While others choose between \"fast and messy\" or \"slow and clean,\" you get both. Your company's competitors using 100% vibe coding will hit complexity walls. Your company's competitors avoiding AI will be slower. You'll maintain AI productivity gains while building systems that actually scale. ### Better \"Boomer Business\" Adoption I believe that this approach could tip the scale for businesses who are still indecisive about vibe coding due to reliability and security concerns. ## Looking Forward: The Tooling Evolution I strongly believe that in the near future, the distinction between vibe code and human code will be admitted by industry and integrated into existing tools. ### Git-Level Integration Git commits automatically tagged as vibed. GitHub PRs showing clear visual distinction between human and AI contributions, up to the code line level. ### AI Agent Constraints Future coding agents will have an option to respect \"human code zones\" - like content-aware inpainting for image generation, but for code. Agents could regenerate entire implementations, not only files or packages, but code line-wise, leaving human guidance code untouched. ### IDE Evolution Syntax highlighting that dims unchecked vibe code while emphasizing human code. Folding options that hide implementation details. Search that prioritizes guidance, domain, architectural code. ### Corporate Adoption This separation makes AI coding auditable and controllable - exactly what the bloody enterprise needs. CTOs can require that all business logic lives in human-controlled packages while allowing rapid development in implementation packages. **So the idea of vibe code separation isn't just about individual productivity. It's about making AI coding enterprise-ready.** ## Technical Implementation in TypeScript One of the ways to split vibe and human code using current tooling that I found is a per-package approach. It's easy to do with a monorepo, but another structural or file-naming convention could work well too. For the case of monorepo, I used the \"-interface\" packages that contain concentrated domain knowledge and shape-setting code (tests, interfaces). I used dependency injection to draw more explicit frontiers between modules. ```ts export type GenerateAndSyncTasksDeps = { taskmaster: { generateTasks: ReturnType<GenerateTasksF>; }; tasktracker: { syncTasks: ReturnType<SyncTasksF>; }; }; export const generateAndSyncTasks = (di: GenerateAndSyncTasksDeps) => async (prd: PrdText) => { const tasks = await di.taskmaster.generateTasks(prd); return await di.tasktracker.syncTasks(tasks.tasks); }; ``` This is the \"entry point\" of a module that receives a PRD document, uses https://github.com/eyaltoledano/claude-task-master to generate tasks, and then syncs them to a task tracker. You can tell the coding agent to pick up from there, but it won't have enough guidance yet. Therefore, \"we need to go deeper.\" That's an example of how I defined the interface for taskmaster.generateTask, in its own package: ```ts export type GenerateTasksDeps = { savePrd: (path: NonEmptyString, prd: PrdText) => Promise<AsyncDisposable>; cli: { generate: ( prdPath: NonEmptyString, tasksJsonPath: NonEmptyString ) => Promise<TasksFileContent>; }; readTasksJson: (tasksJsonPath: NonEmptyString) => Promise<TasksFileContent>; }; export type GenerateTasksF = ( deps: GenerateTasksDeps ) => ( prd: PrdText, current: Option.Option<TasksFileContent> ) => Promise<TasksFileContent>; export const generateTasks: GenerateTasksF = (deps) => async (prd, current) => { if (Option.isSome(current)) { throw new Error(\"panic! PRD update not implemented\"); } const prdPath = castNonEmptyString(\"scripts/prd.txt\"); // not obvious: taskmaster CLI wants the prd first saved in file system await using _letFileGo = await deps.savePrd(prdPath, prd); const outputPath = castNonEmptyString(\"tasks/tasks.json\"); await deps.cli.generate(prdPath, outputPath); // don't clean up here // we read file system after CLI ran to return parsed tasks.json return await deps.readTasksJson(outputPath); }; ``` Past this point, it's already possible to tell Claude Code to generate the `GenerateTasksDeps` providing code that calls the CLI, saves and reads from the file system. Important details that we want to be preserved - \"PRD file is temporary and we want to have it in the file system before calling CLI,\" \"we also want to read the result of CLI call from the file system\" are well-preserved as strong contextual harness for LLM code. Data shape definitions are also a great candidate to use as controlling code: ```ts export const TaskFileContent = Schema.Struct({ id: TaskId, title: Schema.NonEmptyString, description: Schema.String, status: TaskStatus, dependencies: Schema.Array(TaskId), priority: Schema.optional(Schema.String), details: Schema.String, testStrategy: Schema.String, subtasks: Schema.Array(SubtaskFileContent), }); ``` Interfaces too: ```ts export interface TasksService { list: (filters?: { project?: ProjectId; status?: StatusId; user_story?: UserStoryId; }) => Promise<readonly TaskDetail[]>; create: (task: CreateTaskRequest) => Promise<TaskDetail>; get: (id: TaskId) => Promise<TaskDetail>; update: (id: TaskId, task: UpdateTaskRequest) => Promise<TaskDetail>; delete: (id: TaskId) => Promise<void>; } ``` And of course, unit tests are a great candidate for putting into controlling packages, especially [property-based tests](https://monadical.com/posts/property-based-testing-for-temporal-graph-storage.html). Also, you can put there all the code that you *could* 100% vibe but better *don't* - that you're supposed to know, if not by heart, then at least \"at some point when you wrote/reviewed it.\" Tell the agent to conform to those interfaces, test and shape-setting functions, writing the \"-implementation\" package counterpart to your \"-interface.\" An example system query: https://github.com/Monadical-SAS/taiga-taskmaster/blob/master/.llm-docs/PACKAGE_ORGANISATION_AND_CODE_SEPARATION_STANDARDS.md To me, it worked handsomely. The agent was very strong at regenerating code anew if I didn't like something and wanted to add more context to the \"control packages.\" And it never loses any context because of strict conformance to controlling code. And for the PR process, it now becomes clear which code is worth more attention and which you can just glance over, which unlocks much more of vibe power without compromising quality. Igor Loskutov is a Slop Enchanter of Monadical Recent posts Vibe code isn't meant to be reviewed * The Scraping-With-Cookies Dilemma Conversations are the New Oil Don't Give Big Tech Your Papaya View more posts... Back to top Let's transform your organization. BOOK A FREE AI STRATEGY CALL",
      "summary": "7-minute read",
      "url": "https://monadical.com/posts/vibe-code-how-to-stay-in-control.html?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 1660,
      "content_extraction_status": "success",
      "failure_reason": null
    },
    {
      "title": "Silicon Valley's quest to remove friction from our lives",
      "content": "[CONTENT EXTRACTION FAILED] Unable to extract content from: https://www.strangeloopcanon.com/p/notes-on-friction?utm_source=tldrnewsletter",
      "summary": "20-minute read",
      "url": "https://www.strangeloopcanon.com/p/notes-on-friction?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "ai",
      "word_count": 0,
      "content_extraction_status": "failed",
      "failure_reason": "Content validation failed - content too short, paywall detected, or formatting issues"
    },
    {
      "title": "A bit more on Twitter/X's new encrypted messaging",
      "content": "[CONTENT EXTRACTION FAILED] Unable to extract content from: https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/?utm_source=tldrnewsletter",
      "summary": "24-minute read",
      "url": "https://blog.cryptographyengineering.com/2025/06/09/a-bit-more-on-twitter-xs-new-encrypted-messaging/?utm_source=tldrnewsletter",
      "published_date": "2025-06-10T00:00:00",
      "category": "crypto",
      "word_count": 0,
      "content_extraction_status": "failed",
      "failure_reason": "Content validation failed - content too short, paywall detected, or formatting issues"
    }
  ]
}